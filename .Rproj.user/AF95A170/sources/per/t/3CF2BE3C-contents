% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindSplineParsCOR.R
\name{FindSplineParFNCOR}
\alias{FindSplineParFNCOR}
\title{Find spline parameters (Correlation)}
\usage{
FindSplineParFNCOR(
  par,
  Gcoords,
  m.ind,
  n = 0,
  emp.cor,
  type = c("F-norm", "Smith"),
  sphere.dis = FALSE
)
}
\arguments{
\item{par}{Parameter values \eqn{\phi=(b_{1},b_{2},\rho,\kappa,\delta^{(1)}_{4}...\delta^{(1)}_{m},\delta^{(2)}_{4}...\delta^{(2)}_{m})}. If \eqn{m < 4}, \eqn{\delta} parameters are not needed.}

\item{Gcoords}{A \code{d} by 2 matrix of G-plane coordinates.}

\item{m.ind}{A vector of length \code{m<d} giving the indices of the anchor points in \code{Gcoords}.}

\item{n}{Number of data points used to estimate \code{emp.cor}. Only neccesary for \code{type=="Smith"}.}

\item{emp.cor}{A \code{d} by \code{d} matrix of pairwise empirical correlation values.}

\item{type}{\code{"F-norm"} for Frobenius norm method using theoretical \eqn{\rho(h^{*}_{ij})} from a stationary Matérn correlation model. \code{"Smith"} for original Smith (1996) method; also uses stationary Matérn correlation model.}

\item{sphere.dis}{Is Spherical distance or Euclidean distance used?}
}
\value{
Frobenius norm of difference between theoretical \eqn{\rho(h^{*}_{ij})} matrix and \code{emp.cor}, or negative log-likelihood for a stationary Gaussian process fit using D-plane coordinates.
}
\description{
Find spline parameters for deformation based on correlation methods. Either use the Frobenuis norm via \code{type=="F-norm"} or the original Smith (1996) method via \code{type=="Smith"}. Output to be minimised to estimate spline parameters.
}
\examples{
data("Aus_Heat")

Z<-Aus_Heat$Temp.
Gcoords<-Aus_Heat$coords

Z_U<-Z

unif<-function(x){rank(x)/(length(x)+1)}

#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){

  Z_U[,i]<-unif(Z[,i])
}
#Transform to Gaussian margins

Z_N<-qnorm(Z_U)

#Calculate pairwise empirical correlation
emp.cor<-matrix(rep(0,dim(Z_N)[2]^2),nrow=dim(Z_N)[2],ncol=dim(Z_N)[2])
for(i in 1:dim(Z_N)[2]){
  for(j in 1:i){

    emp.cor[i,j]<-cor(Z_N[,i],Z_N[,j])
  }

}
emp.cor<-emp.cor+t(emp.cor)
diag(emp.cor)<-diag(emp.cor)/2

# Set number of anchor points
m<-10
# Sample anchor points
m.ind<-sample(1:dim(Gcoords)[1],m,replace=FALSE)

#Transform to D-plane using Frobenius norm method
sdf<-optim(fn=FindSplineParFNCOR,par=c(0.05,0.05,0,1,rep(0,2*m-6)),
           type="F-norm",sphere.dis=TRUE,Gcoords=Gcoords,m.ind=m.ind,
           control=list(maxit=2000), emp.cor=emp.cor,method = "Nelder-Mead")

sdf<-try(optim(fn=FindSplineParFNCOR,par=sdf$par,sphere.dis=TRUE,type="F-norm",
         Gcoords=Gcoords,m.ind=m.ind, control=list(maxit=2000), emp.cor=emp.cor,
    method = "BFGS"))
sdf$m.ind<-m.ind
#Plot Dcoords

Dcoords<-returnDcoord(sdf$par,Gcoords,sdf$m.ind,sphere.dis=TRUE)
plot(Dcoords)
}
