a=0.2
a=c(0.2,0.4,0.5)
unique.a=matrix(a,ncol=1)
u=as.numeric(ZNE[1,1])
u=2.3
u=qexp(pgev(u,1,1,1),1)
library(evd)
pNE=apply(unique.a,1,function(x){
V=Vterm(1/u,1/u,x[1])
log(1-(exp(-u))-(exp(-u))+exp(-V))
})
library(sdfEXTREME)
pNE=apply(unique.a,1,function(x){
V=Vterm(1/u,1/u,x[1])
log(1-(exp(-u))-(exp(-u))+exp(-V))
})
#' @rdname Vterms
#' @export
Vterm=function(x,y,a){
return( 1/x*pnorm(a/2-1/a*log(x/y))+1/y*pnorm(a/2-1/a*log(y/x)))
}
#' @rdname Vterms
#' @export
Vpart=function(x,y,a){
return(-1/x^2*pnorm(a/2-1/a*log(x/y))-1/(a*x^2)*dnorm(a/2-1/a*log(x/y))+1/(a*y*x)*dnorm(a/2-1/a*log(y/x)))
}
#' @rdname Vterms
#' @export
Vpart2=function(x,y,a){
return(-1/(x^2*a*y)*dnorm(a/2-1/a*log(x/y))-1/(a^2*x^2*y)*(-(a/2-1/a*log(x/y)))*dnorm(a/2-1/a*log(x/y))
-1/(a*y^2*x)*dnorm(a/2-1/a*log(y/x))-1/(a^2*y^2*x)*(-(a/2-1/a*log(y/x)))*dnorm(a/2-1/a*log(y/x)))
}
u=qexp(pgev(u,1,1,1),1)
pNE=apply(unique.a,1,function(x){
V=Vterm(1/u,1/u,x[1])
log(1-(exp(-u))-(exp(-u))+exp(-V))
})
pNE=n.a*pNE
pNE
pNE=apply(unique.a,1,function(x){
V=Vterm(1/u,1/u,x[1])
log(1-2*(exp(-u))+exp(-V))
})
pNE
library(sdfEXTREME)
##Code has been written for Australian Sumemr temperatures case study, but is easily adaptable for precipitation case studies,
data(Aus_Heat)
##data(Snow_Prec
Z<-Aus_Heat$Temp.
Gcoords<-Aus_Heat$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
chi.emp<-function(U,V,z) sum((U>=z)&(V>=z))/sum(U>=z)
q<-0.98 ##Australian Heatwaves. For precipitation, use q <- 0.95
#Calculate pairwise empirical chi
emp.chi<-matrix(rep(0,dim(Z_U)[2]^2),nrow=dim(Z_U)[2],ncol=dim(Z_U)[2])
for(i in 1:dim(Z_U)[2]){
for(j in 1:i){
emp.chi[i,j]<-chi.emp(Z_U[,i],Z_U[,j],q)
}
}
emp.chi<-emp.chi+t(emp.chi)
diag(emp.chi)<-diag(emp.chi)/2
##WARNING: This may take a while to run. Use help(Aus_Heat_Output) for sdf output
#sdf<-sdf.heur.EXTR(m.init,Full.m.ind,Gcoords,emp.chi,type="CHI_BR",par=c(.05,.05,0.2,1.6,rep(0,2*m.init-6)),sphere.dis=T)
data("Aus_Heat_Output")
sdf<-Aus_Heat_Output$sdf
Dcoords<-returnDcoord(sdf$par,Gcoords,sdf$m.ind,sphere.dis=T)
plot(Dcoords)
par(mfrow=c(2,1))
plot(rdist.earth(Gcoords,miles=F),emp.chi,ylab="",main="G-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
library(fields)
plot(rdist.earth(Gcoords,miles=F),emp.chi,ylab="",main="G-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
#Theoretical Chi for deformation
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000))^sdf$par[4]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
#Theoretical Chi for deformation
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000))^sdf$par[4]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="red")
lik=Aus_Heat_Output$likD.MSP
lik=Aus_Heat_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="red")
lik=Aus_Heat_Output$likD.MSP
v_H=0.5*(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik=Aus_Heat_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik$par
Z<-Aus_Heat$Temp.
data(Snow_Precip)
Z<-Snow_Precip$Temp.
Z<-Snow_Precip$Temp.
Gcoords<-Snow_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
Z<-Snow_Precip$Temp.
Gcoords<-Snow_Precip$coords
Z
Z<-Snow_Precip$Pr.
Gcoords<-Snow_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
chi.emp<-function(U,V,z) sum((U>=z)&(V>=z))/sum(U>=z)
q<-0.95 ##Australian Heatwaves. For precipitation, use q <- 0.95
#Calculate pairwise empirical chi
emp.chi<-matrix(rep(0,dim(Z_U)[2]^2),nrow=dim(Z_U)[2],ncol=dim(Z_U)[2])
for(i in 1:dim(Z_U)[2]){
for(j in 1:i){
emp.chi[i,j]<-chi.emp(Z_U[,i],Z_U[,j],q)
}
}
emp.chi<-emp.chi+t(emp.chi)
diag(emp.chi)<-diag(emp.chi)/2
data("Snow_Precip_Output")
sdf<-Snow_Precip_Output$sdf
Dcoords<-returnDcoord(sdf$par,Gcoords,sdf$m.ind,sphere.dis=T)
plot(Dcoords)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
#Theoretical Chi for deformation
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000))^sdf$par[4]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="red")
lik=Aus_Heat_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
lik=Snow_Precip_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik=Snow_Precip_Output$likD.IMSP
lik=Snow_Precip_Output$likD.IMSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=(1-q)^(t_H-1)
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
library(sdfEXTREME)
data(High_Precip)
##data(High_Precip)
Z<-High_Precip$Pr.
Gcoords<-High_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
chi.emp<-function(U,V,z) sum((U>=z)&(V>=z))/sum(U>=z)
library(sdfEXTREME)
data(High_Precip)
##data(High_Precip)
Z<-High_Precip$Pr.
Gcoords<-High_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
Z<-High_Precip$Pr.
Z
data(High_Precip)
Z<-High_Precip$Pr.
High_Precip
Z<-High_Precip$PR.
Gcoords<-High_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
chi.emp<-function(U,V,z) sum((U>=z)&(V>=z))/sum(U>=z)
q<-0.95 ##Australian Heatwaves. For precipitation, use q <- 0.95
#Calculate pairwise empirical chi
emp.chi<-matrix(rep(0,dim(Z_U)[2]^2),nrow=dim(Z_U)[2],ncol=dim(Z_U)[2])
for(i in 1:dim(Z_U)[2]){
for(j in 1:i){
emp.chi[i,j]<-chi.emp(Z_U[,i],Z_U[,j],q)
}
}
emp.chi<-emp.chi+t(emp.chi)
diag(emp.chi)<-diag(emp.chi)/2
data("High_Precip_Output")
sdf<-High_Precip_Output$sdf
Dcoords<-returnDcoord(sdf$par,Gcoords,sdf$m.ind,sphere.dis=T)
plot(Dcoords)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
#Theoretical Chi for deformation
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000))^sdf$par[4]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="red")
lik=High_Precip_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik=High_Precip_Output$likD.IMSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=(1-q)^(t_H-1)
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
v_H=0.5*(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=(1-q)^(t_H-1)
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=(1-q)^(t_H-1)
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik$par[2]
lik$par[1]
lik$par[2]
lik$par[1]
library(sdfEXTREME)
data(Snow_Precip)
##data(Snow_Precip)
Z<-Snow_Precip$Pr.
Gcoords<-Snow_Precip$coords
Z_U<-Z
unif<-function(x){rank(x)/(length(x)+1)}
#Transform to uniform margins
for(i in 1:dim(Z_U)[2]){
Z_U[,i]<-unif(Z[,i])
}
chi.emp<-function(U,V,z) sum((U>=z)&(V>=z))/sum(U>=z)
q<-0.95 ##Australian Heatwaves. For precipitation, use q <- 0.95
#Calculate pairwise empirical chi
emp.chi<-matrix(rep(0,dim(Z_U)[2]^2),nrow=dim(Z_U)[2],ncol=dim(Z_U)[2])
for(i in 1:dim(Z_U)[2]){
for(j in 1:i){
emp.chi[i,j]<-chi.emp(Z_U[,i],Z_U[,j],q)
}
}
emp.chi<-emp.chi+t(emp.chi)
diag(emp.chi)<-diag(emp.chi)/2
data("Snow_Precip_Output")
sdf<-Snow_Precip_Output$sdf
Dcoords<-returnDcoord(sdf$par,Gcoords,sdf$m.ind,sphere.dis=T)
plot(Dcoords)
plot(rdist.earth(Dcoords,miles=F),emp.chi,ylab="",main="D-Plane",xlab=expression(h[ij]))
mtext(side=2, expression(hat(chi)(h[ij])),cex = 1, line=2.2)
#Theoretical Chi for deformation
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000))^sdf$par[4]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="red")
lik=Snow_Precip_Output$likD.MSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=2-t_H
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
lik=Snow_Precip_Output$likD.IMSP
v_H=(seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000)/lik$par[2])^lik$par[1]
t_H=2*pnorm(sqrt(v_H/2))
chi=(1-q)^(t_H-1)
points(y=chi,x=seq(0,max(rdist.earth(Dcoords,miles=F)),length=2000),type="l",col="green")
data(High_Precip)
High_Precip
names(High_Precip)
names(High_Precip)[1]="Pr."
High_Precip
names(High_Precip)
save(High_Precip,file="data/High_Precip.Rda")
library(sdfEXTREME)
library(devtools)
document
document()
document()
data("Snow_Precip")
names(Snow_Precip)
names(High_Precip)
